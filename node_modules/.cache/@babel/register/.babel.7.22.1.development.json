{"{\"assumptions\":{},\"sourceRoot\":\"/home/mente/Desktop/exambot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/mente/Desktop/exambot\",\"filename\":\"/home/mente/Desktop/exambot/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/mente/Desktop/exambot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.1:development":{"value":{"code":"\"use strict\";\n\nconst TelegramBot = require('node-telegram-bot-api');\n\n// replace the value below with the Telegram token you receive from @BotFather\nconst token = '6131597201:AAGxCdKfp5TXrGLoyvOpZPEI4aD-GzC6VSs';\n\n// Create a bot that uses 'polling' to fetch new updates\nconst bot = new TelegramBot(token, {\n  polling: true\n});\n\n// Matches \"/echo [whatever]\"\nbot.onText(/\\/echo (.+)/, (msg, match) => {\n  console.log(\"message recieved\");\n  // 'msg' is the received Message from Telegram\n  // 'match' is the result of executing the regexp above on the text content\n  // of the message\n\n  const chatId = msg.chat.id;\n  const resp = match[1]; // the captured \"whatever\"\n\n  // send back the matched \"whatever\" to the chat\n  bot.sendMessage(chatId, resp);\n});\n\n// Listen for any kind of message. There are different kinds of\n// messages.\nbot.on('message', msg => {\n  const chatId = msg.chat.id;\n\n  // send a message to the chat acknowledging receipt of their message\n  bot.sendMessage(chatId, 'Received your message');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUZWxlZ3JhbUJvdCIsInJlcXVpcmUiLCJ0b2tlbiIsImJvdCIsInBvbGxpbmciLCJvblRleHQiLCJtc2ciLCJtYXRjaCIsImNvbnNvbGUiLCJsb2ciLCJjaGF0SWQiLCJjaGF0IiwiaWQiLCJyZXNwIiwic2VuZE1lc3NhZ2UiLCJvbiJdLCJzb3VyY2VSb290IjoiL2hvbWUvbWVudGUvRGVza3RvcC9leGFtYm90LyIsInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBUZWxlZ3JhbUJvdCA9IHJlcXVpcmUoJ25vZGUtdGVsZWdyYW0tYm90LWFwaScpO1xuXG4vLyByZXBsYWNlIHRoZSB2YWx1ZSBiZWxvdyB3aXRoIHRoZSBUZWxlZ3JhbSB0b2tlbiB5b3UgcmVjZWl2ZSBmcm9tIEBCb3RGYXRoZXJcbmNvbnN0IHRva2VuID0gJzYxMzE1OTcyMDE6QUFHeENkS2ZwNVRYckdMb3l2T3BaUEVJNGFELUd6QzZWU3MnO1xuXG4vLyBDcmVhdGUgYSBib3QgdGhhdCB1c2VzICdwb2xsaW5nJyB0byBmZXRjaCBuZXcgdXBkYXRlc1xuY29uc3QgYm90ID0gbmV3IFRlbGVncmFtQm90KHRva2VuLCB7cG9sbGluZzogdHJ1ZX0pO1xuXG4vLyBNYXRjaGVzIFwiL2VjaG8gW3doYXRldmVyXVwiXG5ib3Qub25UZXh0KC9cXC9lY2hvICguKykvLCAobXNnLCBtYXRjaCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwibWVzc2FnZSByZWNpZXZlZFwiKTtcbiAgLy8gJ21zZycgaXMgdGhlIHJlY2VpdmVkIE1lc3NhZ2UgZnJvbSBUZWxlZ3JhbVxuICAvLyAnbWF0Y2gnIGlzIHRoZSByZXN1bHQgb2YgZXhlY3V0aW5nIHRoZSByZWdleHAgYWJvdmUgb24gdGhlIHRleHQgY29udGVudFxuICAvLyBvZiB0aGUgbWVzc2FnZVxuXG4gIGNvbnN0IGNoYXRJZCA9IG1zZy5jaGF0LmlkO1xuICBjb25zdCByZXNwID0gbWF0Y2hbMV07IC8vIHRoZSBjYXB0dXJlZCBcIndoYXRldmVyXCJcblxuICAvLyBzZW5kIGJhY2sgdGhlIG1hdGNoZWQgXCJ3aGF0ZXZlclwiIHRvIHRoZSBjaGF0XG4gIGJvdC5zZW5kTWVzc2FnZShjaGF0SWQsIHJlc3ApO1xufSk7XG5cbi8vIExpc3RlbiBmb3IgYW55IGtpbmQgb2YgbWVzc2FnZS4gVGhlcmUgYXJlIGRpZmZlcmVudCBraW5kcyBvZlxuLy8gbWVzc2FnZXMuXG5ib3Qub24oJ21lc3NhZ2UnLCAobXNnKSA9PiB7XG4gIGNvbnN0IGNoYXRJZCA9IG1zZy5jaGF0LmlkO1xuXG4gIC8vIHNlbmQgYSBtZXNzYWdlIHRvIHRoZSBjaGF0IGFja25vd2xlZGdpbmcgcmVjZWlwdCBvZiB0aGVpciBtZXNzYWdlXG4gIGJvdC5zZW5kTWVzc2FnZShjaGF0SWQsICdSZWNlaXZlZCB5b3VyIG1lc3NhZ2UnKTtcbn0pOyJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxNQUFNQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQzs7QUFFcEQ7QUFDQSxNQUFNQyxLQUFLLEdBQUcsZ0RBQWdEOztBQUU5RDtBQUNBLE1BQU1DLEdBQUcsR0FBRyxJQUFJSCxXQUFXLENBQUNFLEtBQUssRUFBRTtFQUFDRSxPQUFPLEVBQUU7QUFBSSxDQUFDLENBQUM7O0FBRW5EO0FBQ0FELEdBQUcsQ0FBQ0UsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDQyxHQUFHLEVBQUVDLEtBQUssS0FBSztFQUN0Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCLENBQUM7RUFDakM7RUFDQTtFQUNBOztFQUVBLE1BQU1DLE1BQU0sR0FBR0osR0FBRyxDQUFDSyxJQUFJLENBQUNDLEVBQUU7RUFDMUIsTUFBTUMsSUFBSSxHQUFHTixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7RUFFdkI7RUFDQUosR0FBRyxDQUFDVyxXQUFXLENBQUNKLE1BQU0sRUFBRUcsSUFBSSxDQUFDO0FBQy9CLENBQUMsQ0FBQzs7QUFFRjtBQUNBO0FBQ0FWLEdBQUcsQ0FBQ1ksRUFBRSxDQUFDLFNBQVMsRUFBR1QsR0FBRyxJQUFLO0VBQ3pCLE1BQU1JLE1BQU0sR0FBR0osR0FBRyxDQUFDSyxJQUFJLENBQUNDLEVBQUU7O0VBRTFCO0VBQ0FULEdBQUcsQ0FBQ1csV0FBVyxDQUFDSixNQUFNLEVBQUUsdUJBQXVCLENBQUM7QUFDbEQsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["TelegramBot","require","token","bot","polling","onText","msg","match","console","log","chatId","chat","id","resp","sendMessage","on"],"sourceRoot":"/home/mente/Desktop/exambot/","sources":["index.js"],"sourcesContent":["\nconst TelegramBot = require('node-telegram-bot-api');\n\n// replace the value below with the Telegram token you receive from @BotFather\nconst token = '6131597201:AAGxCdKfp5TXrGLoyvOpZPEI4aD-GzC6VSs';\n\n// Create a bot that uses 'polling' to fetch new updates\nconst bot = new TelegramBot(token, {polling: true});\n\n// Matches \"/echo [whatever]\"\nbot.onText(/\\/echo (.+)/, (msg, match) => {\n    console.log(\"message recieved\");\n  // 'msg' is the received Message from Telegram\n  // 'match' is the result of executing the regexp above on the text content\n  // of the message\n\n  const chatId = msg.chat.id;\n  const resp = match[1]; // the captured \"whatever\"\n\n  // send back the matched \"whatever\" to the chat\n  bot.sendMessage(chatId, resp);\n});\n\n// Listen for any kind of message. There are different kinds of\n// messages.\nbot.on('message', (msg) => {\n  const chatId = msg.chat.id;\n\n  // send a message to the chat acknowledging receipt of their message\n  bot.sendMessage(chatId, 'Received your message');\n});"],"mappings":";;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAEpD;AACA,MAAMC,KAAK,GAAG,gDAAgD;;AAE9D;AACA,MAAMC,GAAG,GAAG,IAAIH,WAAW,CAACE,KAAK,EAAE;EAACE,OAAO,EAAE;AAAI,CAAC,CAAC;;AAEnD;AACAD,GAAG,CAACE,MAAM,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,KAAK,KAAK;EACtCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACjC;EACA;EACA;;EAEA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,IAAI,CAACC,EAAE;EAC1B,MAAMC,IAAI,GAAGN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvB;EACAJ,GAAG,CAACW,WAAW,CAACJ,MAAM,EAAEG,IAAI,CAAC;AAC/B,CAAC,CAAC;;AAEF;AACA;AACAV,GAAG,CAACY,EAAE,CAAC,SAAS,EAAGT,GAAG,IAAK;EACzB,MAAMI,MAAM,GAAGJ,GAAG,CAACK,IAAI,CAACC,EAAE;;EAE1B;EACAT,GAAG,CAACW,WAAW,CAACJ,MAAM,EAAE,uBAAuB,CAAC;AAClD,CAAC,CAAC"}},"mtime":1685609453152}}