{"{\"assumptions\":{},\"sourceRoot\":\"/home/mente/Desktop/exambot/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/mente/Desktop/exambot\",\"filename\":\"/home/mente/Desktop/exambot/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/mente/Desktop/exambot\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.1:development":{"value":{"code":"\"use strict\";\n\nconst token = 'AAGxCdKfp5TXrGLoykuhgvOpZPEI4aD-GzC6VSs';\nlet TelegramBot = require('node-telegram-bot-api');\nlet bot = new TelegramBot(token, {\n  polling: true\n});\n\n// Matches \"/echo [whatever]\"\nbot.onText(/\\/echo(.+)/, (msg, match) => {\n  // The 'msg' is the received Message from Telegram\n  // and 'match' is the result of executing the regexp \n  // above on the text content of the message\n\n  let chatId = msg.chat.id;\n\n  // The captured \"whatever\"\n  let resp = match[1];\n\n  // send back the matched \"whatever\" to the chat\n  bot.sendMessage(chatId, resp);\n  bot.on('polling_error', error => {\n    var time = new Date();\n    console.log(\"TIME:\", time);\n    console.log(\"CODE:\", error.code); // => 'EFATAL'\n    console.log(\"MSG:\", error.message);\n    console.log(\"STACK:\", error.stack);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0b2tlbiIsIlRlbGVncmFtQm90IiwicmVxdWlyZSIsImJvdCIsInBvbGxpbmciLCJvblRleHQiLCJtc2ciLCJtYXRjaCIsImNoYXRJZCIsImNoYXQiLCJpZCIsInJlc3AiLCJzZW5kTWVzc2FnZSIsIm9uIiwiZXJyb3IiLCJ0aW1lIiwiRGF0ZSIsImNvbnNvbGUiLCJsb2ciLCJjb2RlIiwibWVzc2FnZSIsInN0YWNrIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9tZW50ZS9EZXNrdG9wL2V4YW1ib3QvIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0b2tlbiA9ICdBQUd4Q2RLZnA1VFhyR0xveWt1aGd2T3BaUEVJNGFELUd6QzZWU3MnO1xubGV0IFRlbGVncmFtQm90ID0gcmVxdWlyZSgnbm9kZS10ZWxlZ3JhbS1ib3QtYXBpJyk7XG5sZXQgYm90ID0gbmV3IFRlbGVncmFtQm90KHRva2VuLCB7IHBvbGxpbmc6IHRydWUgfSk7XG4gXG4vLyBNYXRjaGVzIFwiL2VjaG8gW3doYXRldmVyXVwiXG5ib3Qub25UZXh0KC9cXC9lY2hvKC4rKS8sIChtc2csIG1hdGNoKSA9PiB7XG4gXG4gICAgLy8gVGhlICdtc2cnIGlzIHRoZSByZWNlaXZlZCBNZXNzYWdlIGZyb20gVGVsZWdyYW1cbiAgICAvLyBhbmQgJ21hdGNoJyBpcyB0aGUgcmVzdWx0IG9mIGV4ZWN1dGluZyB0aGUgcmVnZXhwIFxuICAgIC8vIGFib3ZlIG9uIHRoZSB0ZXh0IGNvbnRlbnQgb2YgdGhlIG1lc3NhZ2VcbiBcbiAgICBsZXQgY2hhdElkID0gbXNnLmNoYXQuaWQ7XG4gXG4gICAgLy8gVGhlIGNhcHR1cmVkIFwid2hhdGV2ZXJcIlxuICAgIGxldCByZXNwID0gbWF0Y2hbMV07XG4gXG4gICAgLy8gc2VuZCBiYWNrIHRoZSBtYXRjaGVkIFwid2hhdGV2ZXJcIiB0byB0aGUgY2hhdFxuICAgIGJvdC5zZW5kTWVzc2FnZShjaGF0SWQsIHJlc3ApO1xuICAgIGJvdC5vbigncG9sbGluZ19lcnJvcicsIChlcnJvcikgPT4ge1xuICAgICAgICB2YXIgdGltZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiVElNRTpcIiwgdGltZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ09ERTpcIiwgZXJyb3IuY29kZSk7ICAvLyA9PiAnRUZBVEFMJ1xuICAgICAgICBjb25zb2xlLmxvZyhcIk1TRzpcIiwgZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiU1RBQ0s6XCIsIGVycm9yLnN0YWNrKTtcbiAgICB9KTtcbn0pOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxLQUFLLEdBQUcseUNBQXlDO0FBQ3ZELElBQUlDLFdBQVcsR0FBR0MsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0FBQ2xELElBQUlDLEdBQUcsR0FBRyxJQUFJRixXQUFXLENBQUNELEtBQUssRUFBRTtFQUFFSSxPQUFPLEVBQUU7QUFBSyxDQUFDLENBQUM7O0FBRW5EO0FBQ0FELEdBQUcsQ0FBQ0UsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDQyxHQUFHLEVBQUVDLEtBQUssS0FBSztFQUVyQztFQUNBO0VBQ0E7O0VBRUEsSUFBSUMsTUFBTSxHQUFHRixHQUFHLENBQUNHLElBQUksQ0FBQ0MsRUFBRTs7RUFFeEI7RUFDQSxJQUFJQyxJQUFJLEdBQUdKLEtBQUssQ0FBQyxDQUFDLENBQUM7O0VBRW5CO0VBQ0FKLEdBQUcsQ0FBQ1MsV0FBVyxDQUFDSixNQUFNLEVBQUVHLElBQUksQ0FBQztFQUM3QlIsR0FBRyxDQUFDVSxFQUFFLENBQUMsZUFBZSxFQUFHQyxLQUFLLElBQUs7SUFDL0IsSUFBSUMsSUFBSSxHQUFHLElBQUlDLElBQUksQ0FBQyxDQUFDO0lBQ3JCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxPQUFPLEVBQUVILElBQUksQ0FBQztJQUMxQkUsT0FBTyxDQUFDQyxHQUFHLENBQUMsT0FBTyxFQUFFSixLQUFLLENBQUNLLElBQUksQ0FBQyxDQUFDLENBQUU7SUFDbkNGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLE1BQU0sRUFBRUosS0FBSyxDQUFDTSxPQUFPLENBQUM7SUFDbENILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsRUFBRUosS0FBSyxDQUFDTyxLQUFLLENBQUM7RUFDdEMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["token","TelegramBot","require","bot","polling","onText","msg","match","chatId","chat","id","resp","sendMessage","on","error","time","Date","console","log","code","message","stack"],"sourceRoot":"/home/mente/Desktop/exambot/","sources":["index.js"],"sourcesContent":["const token = 'AAGxCdKfp5TXrGLoykuhgvOpZPEI4aD-GzC6VSs';\nlet TelegramBot = require('node-telegram-bot-api');\nlet bot = new TelegramBot(token, { polling: true });\n \n// Matches \"/echo [whatever]\"\nbot.onText(/\\/echo(.+)/, (msg, match) => {\n \n    // The 'msg' is the received Message from Telegram\n    // and 'match' is the result of executing the regexp \n    // above on the text content of the message\n \n    let chatId = msg.chat.id;\n \n    // The captured \"whatever\"\n    let resp = match[1];\n \n    // send back the matched \"whatever\" to the chat\n    bot.sendMessage(chatId, resp);\n    bot.on('polling_error', (error) => {\n        var time = new Date();\n        console.log(\"TIME:\", time);\n        console.log(\"CODE:\", error.code);  // => 'EFATAL'\n        console.log(\"MSG:\", error.message);\n        console.log(\"STACK:\", error.stack);\n    });\n});"],"mappings":";;AAAA,MAAMA,KAAK,GAAG,yCAAyC;AACvD,IAAIC,WAAW,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAClD,IAAIC,GAAG,GAAG,IAAIF,WAAW,CAACD,KAAK,EAAE;EAAEI,OAAO,EAAE;AAAK,CAAC,CAAC;;AAEnD;AACAD,GAAG,CAACE,MAAM,CAAC,YAAY,EAAE,CAACC,GAAG,EAAEC,KAAK,KAAK;EAErC;EACA;EACA;;EAEA,IAAIC,MAAM,GAAGF,GAAG,CAACG,IAAI,CAACC,EAAE;;EAExB;EACA,IAAIC,IAAI,GAAGJ,KAAK,CAAC,CAAC,CAAC;;EAEnB;EACAJ,GAAG,CAACS,WAAW,CAACJ,MAAM,EAAEG,IAAI,CAAC;EAC7BR,GAAG,CAACU,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;IAC/B,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,IAAI,CAAC;IAC1BE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,KAAK,CAACK,IAAI,CAAC,CAAC,CAAE;IACnCF,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEJ,KAAK,CAACM,OAAO,CAAC;IAClCH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAACO,KAAK,CAAC;EACtC,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1685607250939}}